/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.event.KeyEvent;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import modelo.Biblioteca;

/**
 *
 * @author ADMINMJ
 */
public class PanelAlta extends javax.swing.JPanel {

    Biblioteca miBiblio;

    /**
     * Creates new form PanelAlta
     */
    public PanelAlta(Biblioteca miBiblio) {
        initComponents();
        this.miBiblio = miBiblio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        pwdContra = new javax.swing.JPasswordField();
        btnGrabar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("ALTA DE USUARIOS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("Nombre-Apellidos");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel3.setText("LOGIN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("CONTRASEÑA");

        txtLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLoginKeyPressed(evt);
            }
        });

        pwdContra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwdContraKeyPressed(evt);
            }
        });

        btnGrabar.setText("GRABAR");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(txtLogin)
                    .addComponent(pwdContra, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(279, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnGrabar)
                        .addGap(143, 143, 143)
                        .addComponent(btnCancelar)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(286, 286, 286))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pwdContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar)
                    .addComponent(btnCancelar))
                .addContainerGap(101, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        //  Según el código de la tecla pulsada
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_F1:
                // el usuario ha presionado la tecla F1, por lo que debe
                // mostrar que información hay que introducir en ese campo.
                JOptionPane.showMessageDialog(this, " Nombre del usuario",
                        "Información del campo", JOptionPane.INFORMATION_MESSAGE);
                break;
            case KeyEvent.VK_ENTER:
                // el usuario ha presionado la tecla enter
                txtLogin.requestFocus();// coloca el cursor en el siguiente campo
                break;
            case KeyEvent.VK_ESCAPE:
                // el usuario ha presionado escape
                txtNombre.setText(""); // borrar lo que hay en ese campo.

        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoginKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_F1:
                // el usuario ha presionado la tecla F1, por lo que debe
                // mostrar que información hay que introducir en ese campo.
                JOptionPane.showMessageDialog(this, "Login del usuario",
                        "Información del campo", JOptionPane.INFORMATION_MESSAGE);
                break;
            case KeyEvent.VK_ENTER:
                // el usuario ha presionado la tecla enter
                pwdContra.requestFocus();// coloca el cursor en el siguiente campo
                break;
            case KeyEvent.VK_ESCAPE:
                // el usuario ha presionado escape
                txtLogin.setText(""); // borrar lo que hay en ese campo.

        }
    }//GEN-LAST:event_txtLoginKeyPressed

    private void pwdContraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdContraKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_F1:
                // el usuario ha presionado la tecla F1, por lo que debe
                // mostrar que información hay que introducir en ese campo.
                JOptionPane.showMessageDialog(this, " Contraseña del usuario",
                        "Información del campo", JOptionPane.INFORMATION_MESSAGE);
                break;
            case KeyEvent.VK_ENTER:
                // el usuario ha presionado la tecla enter
                btnGrabar.requestFocus();// coloca el cursor en el siguiente campo
                break;
            case KeyEvent.VK_ESCAPE:
                // el usuario ha presionado escape
                pwdContra.setText(""); // borrar lo que hay en ese campo.

        }
    }//GEN-LAST:event_pwdContraKeyPressed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed

        boolean comprobar;
        String nombre, login, pass;
        nombre = txtNombre.getText().trim();
        if (validarCampo(nombre)) {
            JOptionPane.showMessageDialog(this, " Campo Requerido",
                    " Información", JOptionPane.ERROR_MESSAGE);
            txtNombre.requestFocus();
        } else {
            login = txtLogin.getText().trim();
            if (validarCampo(login)) {
                JOptionPane.showMessageDialog(this, " Campo Requerido",
                        " Información", JOptionPane.ERROR_MESSAGE);
                txtLogin.requestFocus();
            } else {
                pass = new String(pwdContra.getPassword()).trim();
                if (validarCampo(pass)) {
                    JOptionPane.showMessageDialog(this, " Campo Requerido",
                            " Información", JOptionPane.ERROR_MESSAGE);
                    txtLogin.requestFocus();
                } else {

                    int resultado = miBiblio.nuevoUsuario(nombre, login, pass);
                    if (resultado == -1) {
                        JOptionPane.showMessageDialog(this, " Usuario Añadido", " Alta Usuarios", JOptionPane.INFORMATION_MESSAGE);
                        limpiar();
                    } else {
                        // YA EXISE UN USUARIO CON ESE NOMBRE.
                         JOptionPane.showMessageDialog(this, " Usuario existente",
                                " Error ", JOptionPane.ERROR_MESSAGE);
                      
                        // Limpiamos el campo
                        txtNombre.setText("");
                        // Colocamos el cursor en el campo nombre
                        txtNombre.requestFocus();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
       
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Método para comprobar que se ha introducido algo.
     *
     * @param valor
     * @return verdadero en el caso de que este vacío y false en caso contrario.
     */
    private boolean validarCampo(String valor) {
        boolean resultado = false;
        if (valor.equals("")) {
            resultado = true;
        }
        return resultado;
    }

    private void limpiar() {
        // Limpiar los campos;
        txtNombre.setText("");
        txtLogin.setText("");
        pwdContra.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField pwdContra;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
