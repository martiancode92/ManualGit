/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ModeloTable;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Biblioteca;
import modelo.Libro;
import modelo.Usuario;

/**
 *
 * @author ADMINMJ
 */
public class PanelConsulta extends javax.swing.JPanel {
 Biblioteca miBiblio;
 DefaultComboBoxModel modelo;
 ModeloTable modeloLibros;
 
 
    /**
     * Creates new form PanelConsult
     */
    public PanelConsulta(Biblioteca miBiblio) {
        initComponents();
            this.miBiblio=miBiblio;
            modeloLibros=new ModeloTable();
            // Indico las columnas que va a tener el JTable;
            String[] titulos={"ISBN","TITULO","AUTOR","EDITORIAL"};
            modeloLibros.setColumnIdentifiers(titulos);
            tblLibros.setModel(modeloLibros);
            modelo=new DefaultComboBoxModel();
            cargarUsuarios();
            cmbUsuarios.setModel(modelo);
            // selecciono el primer elemento del combo;
            cmbUsuarios.setSelectedIndex(0);
    }
   
    private void cargarUsuarios(){
        // Recuperamos los usuarios
        ArrayList<Usuario> usuarios= miBiblio.getUsuarios();
        for( int pos=0; pos< usuarios.size(); pos++)
        {
           // Compruebo que si el usuario tiene libros prestados;
            if (! usuarios.get(pos).getPrestados().isEmpty())
                modelo.addElement(usuarios.get(pos));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbUsuarios = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("USUARIOS");

        cmbUsuarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUsuariosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setText("CONSULTA DE PRÉSTAMOS");

        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLibros);

        jLabel3.setText("LIBROS PRÉSTADOS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)
                        .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUsuariosActionPerformed
         // Obtenemos la posición del elemento seleccionado
        int posicion= cmbUsuarios.getSelectedIndex();
        if (posicion ==-1)
            {
                //NO HAY USUARIOS QUE TENGAN LIBROS PRESTADOS
            JOptionPane.showMessageDialog( this, " Primero debe de seleccionar un usuario",
                    "Información", JOptionPane.ERROR_MESSAGE);
            }
        else
        {
            // USUARIOS CON LIBROS PRESTADOS
            // primero se debe de eliminar los libros prestados del otro usuario
            limpiarLibros();
            cargarLibrosUsuario(posicion);
        }
        
    }//GEN-LAST:event_cmbUsuariosActionPerformed
private void limpiarLibros(){
    //Obtengo el número de filas del JTable
    int filas= modeloLibros.getRowCount();
    for ( int pos=0; pos < filas; pos++)
        // Siempre se pone la fila 0 , porque cada
        // vez que elimina una , las filas posteriores suben una posición
        modeloLibros.removeRow(0);
}
private void cargarLibrosUsuario(int posicion)
{
    // obtener la información del usuario seleccionado
    Usuario u =(Usuario)modelo.getElementAt(posicion);
    ArrayList<Libro> libros= u.getPrestados();
      Vector v;
    for ( int pos=0; pos < libros.size(); pos++){
       v= new Vector();
        v.add( libros.get(pos).getIsbn());
        v.add(libros.get(pos).getTitulo());
        v.add(libros.get(pos).getEditorial());
        v.add(libros.get(pos).getAutor());
        modeloLibros.addRow(v);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLibros;
    // End of variables declaration//GEN-END:variables
}
